# Generated by Django 5.2.6 on 2025-09-13 07:57

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('party_code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=128, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('tax_id', models.CharField(blank=True, max_length=64, null=True)),
                ('is_vendor', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Party',
                'verbose_name_plural': 'Parties',
                'ordering': ('party_code',),
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=128)),
                ('address', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plant',
                'verbose_name_plural': 'Plants',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('product_group', models.CharField(choices=[('FG', 'Finished Good'), ('RM', 'Raw Material'), ('WIP', 'Work in Progress')], default='RM', max_length=10)),
                ('shade', models.CharField(blank=True, default='', max_length=60)),
                ('size', models.CharField(blank=True, default='', max_length=30)),
                ('uom', models.CharField(blank=True, default='pcs', max_length=20)),
                ('standard_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0'), max_digits=14)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='ProductionLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=128)),
                ('active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_lines', to='garment_app.plant')),
            ],
            options={
                'verbose_name': 'Production Line',
                'verbose_name_plural': 'Production Lines',
                'ordering': ('plant__code', 'code'),
                'unique_together': {('plant', 'code')},
            },
        ),
        migrations.CreateModel(
            name='ProductPlant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=64, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField(default=True)),
                ('standard_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0'), max_digits=14)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_plants', to='garment_app.plant')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_plants', to='garment_app.product')),
            ],
            options={
                'verbose_name': 'Product (Plant)',
                'verbose_name_plural': 'Products (Plant)',
                'ordering': ('product__code', 'plant__code'),
                'unique_together': {('product', 'plant')},
            },
        ),
        migrations.CreateModel(
            name='BOMHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField(default=1, editable=False)),
                ('effective_from', models.DateField(blank=True, null=True)),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('scrap_percent', models.DecimalField(decimal_places=2, default=Decimal('0.0'), max_digits=6)),
                ('overhead_cost', models.DecimalField(decimal_places=4, default=Decimal('0.0'), max_digits=14)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('product_plant', models.ForeignKey(help_text='Finished Good (plant-specific)', on_delete=django.db.models.deletion.CASCADE, related_name='boms', to='garment_app.productplant')),
            ],
            options={
                'verbose_name': 'BOM',
                'verbose_name_plural': 'BOMs',
                'ordering': ('product_plant__product__code', 'product_plant__plant__code', '-version'),
                'unique_together': {('product_plant', 'version')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_plant_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_synced_to_user', models.DateTimeField(blank=True, help_text='When profile last pushed changes to User', null=True)),
                ('last_synced_from_user', models.DateTimeField(blank=True, help_text='When profile last pulled changes from User', null=True)),
                ('plant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='garment_app.plant')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='BOMItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=10)),
                ('bom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='garment_app.bomheader')),
                ('component', models.ForeignKey(help_text='Component as plant-specific product (ProductPlant)', on_delete=django.db.models.deletion.PROTECT, related_name='bom_components', to='garment_app.productplant')),
            ],
            options={
                'verbose_name': 'BOM Item',
                'ordering': ('id',),
                'unique_together': {('bom', 'component')},
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32)),
                ('name', models.CharField(max_length=128)),
                ('active', models.BooleanField(default=True)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='garment_app.plant')),
                ('production_line', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='workers', to='garment_app.productionline')),
            ],
            options={
                'verbose_name': 'Worker',
                'ordering': ('plant__code', 'code'),
                'unique_together': {('plant', 'code')},
            },
        ),
    ]
